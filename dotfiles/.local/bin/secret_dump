#!/usr/bin/env python3

import yaml

try:
    from yaml import CLoader as Loader
except ImportError:
    from yaml import Loader

import argparse
import os
import base64
import sys


def main():
    parser = argparse.ArgumentParser(
        description="Dump kubernetes secret values.",
    )
    parser.add_argument(
        "-f",
        "--file",
        default=None,
        help="File to read the secret from if not provided assumed to be stdin.",
    )
    parser.add_argument(
        "-d",
        "--double-encoded",
        action="store_true",
        help="If provided will double decode the strings. "
        "This is useful for helm release manifests which are base64 encoded twice.",
    )
    args = parser.parse_args()

    if args.file:
        fh = open(args.file)
    else:
        fh = sys.stdin

    secret = yaml.load(fh, Loader=Loader)
    data = secret["data"]
    for key, value in data.items():
        decoded = base64.standard_b64decode(value)
        if args.double_encoded:
            decoded = base64.standard_b64decode(decoded)

        print(f"{key}: {decoded.decode('utf-8')}")

    if args.file:
        fh.close()


if __name__ == "__main__":
    main()
