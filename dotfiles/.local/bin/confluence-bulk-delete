#!/usr/bin/env python3
import argparse
import os

import requests
from requests.auth import HTTPBasicAuth

AUTH = HTTPBasicAuth("mathew.robinson@tillo.io", os.getenv("JIRA_TOKEN"))
HEADERS = {"Accept": "application/json", "Content-Type": "application/json"}


def get_children(id):
    url = f"https://teamtillo.atlassian.net/wiki/api/v2/pages/{id}/children"
    response = requests.get(url, auth=AUTH, headers=HEADERS)
    response.raise_for_status()
    data = response.json()
    children = data["results"]
    while data["_links"].get("next"):
        response = requests.get(data["_links"]["next"], auth=AUTH, headers=HEADERS)
        response.raise_for_status()
        data = response.json()
        children.extend(data["results"])

    return children


def bulk_delete(parent_id):
    print(f"Getting children ids for {parent_id}...")
    child_ids = [child["id"] for child in get_children(parent_id)]
    all_ids = child_ids + [parent_id]
    for page_id in all_ids:
        url = f"https://teamtillo.atlassian.net/wiki/api/v2/pages/{page_id}"
        print(f"Deleting {page_id}...")
        response = requests.delete(url, auth=AUTH)
        if not response.ok:
            raise Exception(response.text)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("PAGE_IDS", nargs="+")
    args = parser.parse_args()
    for page_id in args.PAGE_IDS:
        print(f"Deleting {page_id} and it's children...")
        bulk_delete(page_id)


if __name__ == "__main__":
    main()
