#!/usr/bin/env python3

import os
import requests

token = os.getenv("GITHUB_TOKEN")
assert token, "Must set $GITHUB_TOKEN"

who = os.getenv("GITHUB_REVIEWER", "chasinglogic")
assert who, "Must set your github username as $GITHUB_REVIEWER"


query = {
    "query": f"""{{
  search(query: "type:pr state:open review-requested:{who}", type: ISSUE, first: 100) {{
    issueCount
    pageInfo {{
      endCursor
      startCursor
    }}
    edges {{
      node {{
        ... on PullRequest {{
          title
          author {{
            login
          }}
          repository {{
            nameWithOwner
          }}
          number
          url
        }}
      }}
    }}
  }}
}}
"""
}

headers = {"Authorization": f"Bearer {token}"}


def get_reviews_requested():
    response = requests.post(
        "https://api.github.com/graphql", json=query, headers=headers
    )
    return [pr["node"] for pr in response.json()["data"]["search"]["edges"]]


def approve(pr):
    url = f"https://api.github.com/repos/{pr['repository']['nameWithOwner']}/pulls/{pr['number']}/reviews"
    approval = {"event": "APPROVE"}
    res = requests.post(url, json=approval, headers=headers)
    res.raise_for_status()


def main():
    pr_nodes = get_reviews_requested()
    for pr in pr_nodes:
        if "dependabot" in pr["author"]["login"]:
            print("Found dependabot PR!", pr["title"])
            approve(pr)
            print("Approved PR:", pr["url"])


if __name__ == "__main__":
    main()
